syntax = "proto3";
package sunrise.liquidityincentive.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/sunriselayer/sunrise/x/liquidityincentive/types";

// Gauge
message Gauge {
  uint64 previous_epoch_id = 1 [(amino.dont_omitempty) = true];
  uint64 pool_id = 2 [(amino.dont_omitempty) = true];
  string count = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// TallyResult
message TallyResult {
  uint64 pool_id = 1 [(amino.dont_omitempty) = true];
  string count = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// PoolWeight
message PoolWeight {
  uint64 pool_id = 1 [(amino.dont_omitempty) = true];
  string weight = 2 [(cosmos_proto.scalar) = "cosmos.Dec"];
}

// Vote
message Vote {
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated PoolWeight pool_weights = 2 [(gogoproto.nullable) = false];
}
