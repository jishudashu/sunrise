syntax = "proto3";
package sunrise.liquidityincentive.v1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/liquidityincentive/v1/gauge.proto";

option go_package = "github.com/sunriselayer/sunrise/x/liquidityincentive/types";

// EventVoteGauge
message EventVoteGauge {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated PoolWeight pool_weights = 2 [(gogoproto.nullable) = false];
}

// EventRegisterBribe
message EventRegisterBribe {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 epoch_id = 2;
  uint64 pool_id = 3;
  cosmos.base.v1beta1.Coin amount = 4 [(gogoproto.nullable) = false];
}

// EventClaimBribes
message EventClaimBribes {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin claimed_bribes = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}
